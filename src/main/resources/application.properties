# Quarkus Configuration file
# key = value
quarkus.http.port=8081
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.path=/docs

quarkus.http.cors=true
quarkus.http.cors.origins=/.*/

## Datasource ##
quarkus.datasource.jdbc.max-size=16
quarkus.datasource.db-kind = postgresql
#quarkus.datasource.devservices.image-name=postgis/postgis

# Dev:
%dev.quarkus.datasource.jdbc.url = ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/picpay1?currentSchema=admin_sch}
quarkus.resteasy-json.json-default=false

#%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://oci1517ise05:7004/postgres
%dev.quarkus.datasource.username = ${DATASOURCE_USERNAME:admin_user}
%dev.quarkus.datasource.password = ${DATASOURCE_PASSWORD:passwd}

# Test:
%test.quarkus.liquibase.migrate-at-start=false
%test.quarkus.datasource.db-kind = h2
%test.quarkus.datasource.devservices.image-name=
%test.quarkus.datasource.jdbc.url = jdbc:h2:tcp://localhost/mem:test
%test.quarkus.datasource.username = postgres
%test.quarkus.datasource.password = cpqdcpqd

# Prod:
%prod.quarkus.datasource.jdbc.url = ${DATASOURCE_URL}
%prod.quarkus.datasource.username = ${DATASOURCE_USERNAME}
%prod.quarkus.datasource.password = ${DATASOURCE_PASSWORD}

# Liquibase minimal config properties
quarkus.liquibase.migrate-at-start=true


## Keycloak ##
quarkus.log.category."io.quarkus.oidc".level=TRACE
quarkus.oidc.auth-server-url=${KEYCLOAK:http://10.210.50.66:30400/realms/portal}
quarkus.oidc.client-id=getter




## Kogito ##
%dev.quarkus.rest-client.authroizer-api.url=${KOGITO:http://localhost:8090}
%prod.quarkus.rest-client.authroizer-api.url=${KOGITO}
quarkus.rest-client.kogito-api.read-timeout=100000

## Kafka ##
quarkus.kafka.devservices.enabled=true
kafka.bootstrap.servers=${KAFKA_SERVER:localhost:9092}
mp.messaging.outgoing.createDeviceQueue.connector=smallrye-kafka
mp.messaging.outgoing.createDeviceQueue.topic=createDeviceQueue
#mp.messaging.outgoing.notifications-out.group.id=kogito-kafka-one
mp.messaging.outgoing.createDeviceQueue.group.id=kogito-kafka-one
mp.messaging.outgoing.createDeviceQueue.auto.offset.reset=earliest
#quarkus.kafka.devservices.service-name=kafka
version: "3.6"
services:
  postgres-database-server:
    image: postgres:15.5-alpine3.18
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_database_data:/var/lib/postgresql/data
      - ./postgres/00-bootstrap-databases-users-roles-and-schemas.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      POSTGRES_PASSWORD: "A_p@assword_th4t_shou1d_n0t_be_u$ed"
      TZ: "GMT-3"
      PGTZ: "GMT-3"
    networks:
      - postgres-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:6.1.3
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  
  kafka:
    image: confluentinc/cp-kafka:6.1.3
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://172.17.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  
  kafdrop:
    image: obsidiandynamics/kafdrop:3.27.0
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9001:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      
 # getter-api:
 #   image: local/getter-api:latest
 #   restart: always
 #   env_file:
 #    - .env
 #   depends_on:
 #     postgres-database-server:
 #       condition: service_started
 #   ports:
 #     - 8081:8081
 #   networks:
 #     - getter-api-network
 #     - postgres-network
 #     - broker-kafka
 #     
 # getter-kogito:
 #   image: local/getter-kogito:latest
 #   restart: always
 #   env_file:
 #    - .env
 #   depends_on:
 #     postgres-database-server:
 #       condition: service_started
 #   ports:
 #     - 8090:8090
 #   networks:
 #     - getter-kogito-network
 #     - getter-api-network
 #     - postgres-network
 #     - broker-kafka

networks:
  postgres-network:
    name: postgres-network
    driver: bridge
  #getter-api-network:
  #  name: getter-api-network
  #  driver: bridge
  #getter-kogito-network:
  #  name: getter-kogito-network
  #  driver: bridge
  broker-kafka:
    driver: bridge 
  
volumes:
  postgres_database_data: